@model WebApplication9.Models.Endereco

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Endereco</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.codigo)

        <div class="form-group">
            @Html.LabelFor(model => model.rua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefone_residencial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefone_residencial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefone_residencial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefone_celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefone_celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefone_celular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tipo_endereco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tipo_endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tipo_endereco, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.codigo_pessoa, "Nome da Pessoa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codigo_pessoa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codigo_pessoa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codigo_estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("codigo_estado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codigo_estado, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.codigo_cidade, "Cidade", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.codigo_cidade, ViewBag.codigo_cidade as List<SelectListItem>, new { @class = "form-control" })
                @*@Html.EditorFor(model => model.codigo_cidade, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.codigo_cidade, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.codigo_bairro, "Bairro", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.codigo_bairro, ViewBag.codigo_bairro as List<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.codigo_bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>

    $(document).ready(function ()
    {

        //***** Ao alterar o estado, carrega cidades filtradas pelo estado
        $("#codigo_estado").change(function () {
       // var estadoId = $('#codigo_estado option:selected').val();
        var estadoId = $('#codigo_estado').val();
        debugger

            $.ajax({
                 type: 'GET',
                url: '@Url.Action("GetCidadesPorEstado","Enderecos")',
                dataType: 'json',
                data: { estadoId: estadoId},
                success: function (cidades) {
                //alert(cidades);
            $("#codigo_bairro").empty();
            $("#codigo_bairro").append("<option value='0'>--Select cidade--</option>");
            $("#codigo_cidade").empty();
            $("#codigo_cidade").append("<option value='0'>--Select cidade--</option>");
            $.each(cidades, function (i, cidades) {

              $("#codigo_cidade").append('<option value="'
                    + cidades.codigo + '">' +
                    cidades.descricao + '</option>');
                });
               }
            });
        });
         //***** Ao alterar a cidade, carrega bairros filtrados pela cidade
        $("#codigo_cidade").change(function () {
        var cidadeId = $('#codigo_cidade').val();
        debugger

            $.ajax({
                 type: 'GET',
                url: '@Url.Action("GetBairrosPorCidade","Enderecos")',
                dataType: 'json',
                data: { cidadeId: cidadeId},
                success: function (bairros) {

            $("#codigo_bairro").empty();
            $("#codigo_bairro").append("<option value='0'>--Select bairro--</option>");
            $.each(bairros, function (i, bairros) {

              $("#codigo_bairro").append('<option value="'
                  + bairros.codigo + '">' +
                   bairros.descricao + '</option>');
                });
               }
            });
        });

   });

</script>